# 7-base_geometry.txt

===============================
 How to Use 7-base_geometry.py
===============================

This library is very simple, since it only has one function called
``integer_validator(name, value)``.

Numbers
=======

``integer_validator()`` raise an error.

::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Sipho", 98)

::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Sipho", 0)
    Traceback (most recent call last):
    ...
    ValueError: Sipho must be greater than 0

::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Sipho", -1)
    Traceback (most recent call last):
    ...
    ValueError: Sipho must be greater than 0

::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Sipho", "two")
    Traceback (most recent call last):
    ...
    TypeError: Sipho must be an integer

::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Sipho")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Sipho", 87.5)
    Traceback (most recent call last):
    ...
    TypeError: Sipho must be an integer

::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator(10, 8)
